[{"/home/pranith/webdev/husky-jobs-frontend/src/index.js":"1","/home/pranith/webdev/husky-jobs-frontend/src/reportWebVitals.js":"2","/home/pranith/webdev/husky-jobs-frontend/src/App.js":"3","/home/pranith/webdev/husky-jobs-frontend/src/component/Welcome.js":"4","/home/pranith/webdev/husky-jobs-frontend/src/component/Login.js":"5","/home/pranith/webdev/husky-jobs-frontend/src/component/Logout.js":"6","/home/pranith/webdev/husky-jobs-frontend/src/component/Navbar.js":"7","/home/pranith/webdev/husky-jobs-frontend/src/component/Profile.js":"8","/home/pranith/webdev/husky-jobs-frontend/src/component/Applications.js":"9","/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/CreateJobs.js":"10","/home/pranith/webdev/husky-jobs-frontend/src/component/Signup.js":"11","/home/pranith/webdev/husky-jobs-frontend/src/lib/MessagePopup.js":"12","/home/pranith/webdev/husky-jobs-frontend/src/lib/isAuth.js":"13","/home/pranith/webdev/husky-jobs-frontend/src/component/Home.js":"14","/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/MyJobs.js":"15","/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/AcceptedApplicants.js":"16","/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/JobApplications.js":"17","/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/Profile.js":"18","/home/pranith/webdev/husky-jobs-frontend/src/lib/apiList.js":"19","/home/pranith/webdev/husky-jobs-frontend/src/lib/EmailInput.js":"20","/home/pranith/webdev/husky-jobs-frontend/src/lib/PasswordInput.js":"21","/home/pranith/webdev/husky-jobs-frontend/src/lib/FileUploadInput.js":"22","/home/pranith/webdev/husky-jobs-frontend/src/component/PublicProfile.js":"23","/home/pranith/webdev/husky-jobs-frontend/src/component/JobProfile.js":"24"},{"size":500,"mtime":1670447881225,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1670447881225,"results":"27","hashOfConfig":"26"},{"size":3754,"mtime":1670545541246,"results":"28","hashOfConfig":"26"},{"size":765,"mtime":1670450627003,"results":"29","hashOfConfig":"26"},{"size":3542,"mtime":1670447881225,"results":"30","hashOfConfig":"26"},{"size":489,"mtime":1670447881225,"results":"31","hashOfConfig":"26"},{"size":2532,"mtime":1670447881225,"results":"32","hashOfConfig":"26"},{"size":8702,"mtime":1670469250674,"results":"33","hashOfConfig":"26"},{"size":7391,"mtime":1670546354784,"results":"34","hashOfConfig":"26"},{"size":8138,"mtime":1670447881225,"results":"35","hashOfConfig":"26"},{"size":14295,"mtime":1670447881225,"results":"36","hashOfConfig":"26"},{"size":503,"mtime":1670447881225,"results":"37","hashOfConfig":"26"},{"size":165,"mtime":1670447881225,"results":"38","hashOfConfig":"26"},{"size":22155,"mtime":1670546367096,"results":"39","hashOfConfig":"26"},{"size":25719,"mtime":1670546437576,"results":"40","hashOfConfig":"26"},{"size":24355,"mtime":1670546388340,"results":"41","hashOfConfig":"26"},{"size":22602,"mtime":1670546407620,"results":"42","hashOfConfig":"26"},{"size":5186,"mtime":1670469263886,"results":"43","hashOfConfig":"26"},{"size":437,"mtime":1670447881225,"results":"44","hashOfConfig":"26"},{"size":1167,"mtime":1670447881225,"results":"45","hashOfConfig":"26"},{"size":1666,"mtime":1670447881225,"results":"46","hashOfConfig":"26"},{"size":3279,"mtime":1670447881225,"results":"47","hashOfConfig":"26"},{"size":1035,"mtime":1670519707502,"results":"48","hashOfConfig":"26"},{"size":1006,"mtime":1670545521861,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1n298x1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pranith/webdev/husky-jobs-frontend/src/index.js",[],["108","109"],"/home/pranith/webdev/husky-jobs-frontend/src/reportWebVitals.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/App.js",["110","111"],"/home/pranith/webdev/husky-jobs-frontend/src/component/Welcome.js",["112"],"import { Grid, Typography } from \"@material-ui/core\";\nimport Home from \"./Home\";\n\nconst Welcome = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Welcome to Job Portal</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport const ErrorPage = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Error 404</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Welcome;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/Login.js",["113"],"import { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Login\n          </Typography>\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/Logout.js",["114"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/Navbar.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/component/Profile.js",["115","116","117","118","119","120","121","122"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport isAuth from \"../lib/isAuth\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n\n  return !loggedin ? (\n    <Redirect to=\"/login\" />\n  ) : (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (.pdf)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\n\n      {/* </Modal> */}\n    </>\n  );\n};\n\nexport default Profile;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/Applications.js",["123","124","125","126","127","128","129","130","131"],"/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/CreateJobs.js",["132","133"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    maxApplicants: 100,\n    maxPositions: 30,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: \"Full Time\",\n    duration: 0,\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: \"\",\n          maxApplicants: 100,\n          maxPositions: 30,\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: \"Full Time\",\n          duration: 0,\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Add Job</Typography>\n        </Grid>\n        <Grid item container xs direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Paper\n              style={{\n                padding: \"20px\",\n                outline: \"none\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    onChange={(event) =>\n                      handleInput(\"title\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput(\"jobType\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Duration\"\n                    variant=\"outlined\"\n                    value={jobDetails.duration}\n                    onChange={(event) => {\n                      handleInput(\"duration\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value={0}>Flexible</MenuItem>\n                    <MenuItem value={1}>1 Month</MenuItem>\n                    <MenuItem value={2}>2 Months</MenuItem>\n                    <MenuItem value={3}>3 Months</MenuItem>\n                    <MenuItem value={4}>4 Months</MenuItem>\n                    <MenuItem value={5}>5 Months</MenuItem>\n                    <MenuItem value={6}>6 Months</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput(\"salary\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput(\"deadline\", event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Maximum Number Of Applicants\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxApplicants}\n                    onChange={(event) => {\n                      handleInput(\"maxApplicants\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Positions Available\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxPositions}\n                    onChange={(event) => {\n                      handleInput(\"maxPositions\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateJobs;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/Signup.js",["134","135"],"import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    console.log(education);\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <MultifieldInput\n              education={education}\n              setEducation={setEducation}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (.pdf)\"\n                icon={<DescriptionIcon />}\n                // value={files.resume}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     resume: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Profile Photo (.jpg/.png)\"\n                icon={<FaceIcon />}\n                // value={files.profileImage}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     profileImage: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadProfileImage}\n                handleInput={handleInput}\n                identifier={\"profile\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <PhoneInput\n                country={\"us\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n","/home/pranith/webdev/husky-jobs-frontend/src/lib/MessagePopup.js",["136"],"import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","/home/pranith/webdev/husky-jobs-frontend/src/lib/isAuth.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/component/Home.js",["137","138","139","140","141","142","143","144","145","146"],"/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/MyJobs.js",["147","148","149","150","151","152"],"/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/AcceptedApplicants.js",["153","154","155","156","157","158","159","160","161"],"/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/JobApplications.js",["162","163","164","165","166","167"],"/home/pranith/webdev/husky-jobs-frontend/src/component/recruiter/Profile.js",["168","169","170","171"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\nimport isAuth from \"../../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return !loggedin ? (\n    <Redirect to=\"/login\" />\n  ) : (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","/home/pranith/webdev/husky-jobs-frontend/src/lib/apiList.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/lib/EmailInput.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/lib/PasswordInput.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/lib/FileUploadInput.js",[],"/home/pranith/webdev/husky-jobs-frontend/src/component/PublicProfile.js",["172","173"],"import axios from \"axios\";\nimport React, { useContext } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport apiList from \"../lib/apiList\";\nimport { SetPopupContext } from \"../App\";\n\nconst PublicProfile = () => {\n  const { profileId } = useParams();\n  const [profileDetails, setProfileDetails] = useState(\"\");\n  const setPopup = useContext(SetPopupContext);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${apiList.user}/${profileId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return <div>Make profile screen ui</div>;\n};\n\nexport default PublicProfile;\n","/home/pranith/webdev/husky-jobs-frontend/src/component/JobProfile.js",["174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":15},{"ruleId":"180","severity":1,"message":"184","line":20,"column":8,"nodeType":"182","messageId":"183","endLine":20,"endColumn":14},{"ruleId":"180","severity":1,"message":"185","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"180","severity":1,"message":"186","line":4,"column":3,"nodeType":"182","messageId":"183","endLine":4,"endColumn":12},{"ruleId":"187","severity":1,"message":"188","line":16,"column":6,"nodeType":"189","endLine":16,"endColumn":8,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"191","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":8},{"ruleId":"180","severity":1,"message":"192","line":111,"column":10,"nodeType":"182","messageId":"183","endLine":111,"endColumn":18},{"ruleId":"180","severity":1,"message":"193","line":111,"column":20,"nodeType":"182","messageId":"183","endLine":111,"endColumn":31},{"ruleId":"180","severity":1,"message":"194","line":112,"column":10,"nodeType":"182","messageId":"183","endLine":112,"endColumn":14},{"ruleId":"180","severity":1,"message":"195","line":113,"column":20,"nodeType":"182","messageId":"183","endLine":113,"endColumn":31},{"ruleId":"187","severity":1,"message":"196","line":140,"column":6,"nodeType":"189","endLine":140,"endColumn":8,"suggestions":"197"},{"ruleId":"180","severity":1,"message":"198","line":172,"column":9,"nodeType":"182","messageId":"183","endLine":172,"endColumn":20},{"ruleId":"180","severity":1,"message":"199","line":176,"column":9,"nodeType":"182","messageId":"183","endLine":176,"endColumn":20},{"ruleId":"180","severity":1,"message":"200","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":13},{"ruleId":"180","severity":1,"message":"201","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"186","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":12},{"ruleId":"180","severity":1,"message":"202","line":13,"column":3,"nodeType":"182","messageId":"183","endLine":13,"endColumn":9},{"ruleId":"180","severity":1,"message":"203","line":14,"column":3,"nodeType":"182","messageId":"183","endLine":14,"endColumn":19},{"ruleId":"180","severity":1,"message":"204","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":12},{"ruleId":"180","severity":1,"message":"205","line":16,"column":3,"nodeType":"182","messageId":"183","endLine":16,"endColumn":11},{"ruleId":"180","severity":1,"message":"206","line":17,"column":3,"nodeType":"182","messageId":"183","endLine":17,"endColumn":11},{"ruleId":"187","severity":1,"message":"196","line":231,"column":6,"nodeType":"189","endLine":231,"endColumn":8,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"208","line":1,"column":22,"nodeType":"182","messageId":"183","endLine":1,"endColumn":31},{"ruleId":"180","severity":1,"message":"191","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":8},{"ruleId":"180","severity":1,"message":"209","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":8},{"ruleId":"210","severity":1,"message":"211","line":459,"column":32,"nodeType":"212","messageId":"213","endLine":459,"endColumn":34},{"ruleId":"180","severity":1,"message":"214","line":1,"column":20,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"204","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":12},{"ruleId":"180","severity":1,"message":"215","line":20,"column":8,"nodeType":"182","messageId":"183","endLine":20,"endColumn":18},{"ruleId":"180","severity":1,"message":"216","line":33,"column":8,"nodeType":"182","messageId":"183","endLine":33,"endColumn":14},{"ruleId":"180","severity":1,"message":"195","line":69,"column":20,"nodeType":"182","messageId":"183","endLine":69,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":193,"column":28,"nodeType":"212","messageId":"213","endLine":193,"endColumn":30},{"ruleId":"180","severity":1,"message":"195","line":548,"column":20,"nodeType":"182","messageId":"183","endLine":548,"endColumn":31},{"ruleId":"187","severity":1,"message":"196","line":579,"column":6,"nodeType":"189","endLine":579,"endColumn":8,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"211","line":595,"column":33,"nodeType":"212","messageId":"213","endLine":595,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":601,"column":33,"nodeType":"212","messageId":"213","endLine":601,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":607,"column":32,"nodeType":"212","messageId":"213","endLine":607,"endColumn":34},{"ruleId":"180","severity":1,"message":"204","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":12},{"ruleId":"180","severity":1,"message":"215","line":21,"column":8,"nodeType":"182","messageId":"183","endLine":21,"endColumn":18},{"ruleId":"187","severity":1,"message":"196","line":714,"column":6,"nodeType":"189","endLine":714,"endColumn":8,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"211","line":730,"column":33,"nodeType":"212","messageId":"213","endLine":730,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":736,"column":33,"nodeType":"212","messageId":"213","endLine":736,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":742,"column":32,"nodeType":"212","messageId":"213","endLine":742,"endColumn":34},{"ruleId":"180","severity":1,"message":"201","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"186","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":12},{"ruleId":"180","severity":1,"message":"202","line":13,"column":3,"nodeType":"182","messageId":"183","endLine":13,"endColumn":9},{"ruleId":"180","severity":1,"message":"203","line":14,"column":3,"nodeType":"182","messageId":"183","endLine":14,"endColumn":19},{"ruleId":"180","severity":1,"message":"204","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":12},{"ruleId":"180","severity":1,"message":"205","line":16,"column":3,"nodeType":"182","messageId":"183","endLine":16,"endColumn":11},{"ruleId":"180","severity":1,"message":"219","line":20,"column":10,"nodeType":"182","messageId":"183","endLine":20,"endColumn":19},{"ruleId":"180","severity":1,"message":"220","line":450,"column":9,"nodeType":"182","messageId":"183","endLine":450,"endColumn":17},{"ruleId":"187","severity":1,"message":"196","line":717,"column":6,"nodeType":"189","endLine":717,"endColumn":8,"suggestions":"221"},{"ruleId":"180","severity":1,"message":"201","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"186","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":12},{"ruleId":"180","severity":1,"message":"202","line":13,"column":3,"nodeType":"182","messageId":"183","endLine":13,"endColumn":9},{"ruleId":"180","severity":1,"message":"204","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":12},{"ruleId":"180","severity":1,"message":"205","line":16,"column":3,"nodeType":"182","messageId":"183","endLine":16,"endColumn":11},{"ruleId":"187","severity":1,"message":"196","line":685,"column":6,"nodeType":"189","endLine":685,"endColumn":8,"suggestions":"222"},{"ruleId":"180","severity":1,"message":"191","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":8},{"ruleId":"180","severity":1,"message":"195","line":37,"column":20,"nodeType":"182","messageId":"183","endLine":37,"endColumn":31},{"ruleId":"187","severity":1,"message":"196","line":56,"column":6,"nodeType":"189","endLine":56,"endColumn":8,"suggestions":"223"},{"ruleId":"210","severity":1,"message":"211","line":169,"column":34,"nodeType":"212","messageId":"213","endLine":169,"endColumn":36},{"ruleId":"180","severity":1,"message":"224","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":24},{"ruleId":"187","severity":1,"message":"196","line":15,"column":6,"nodeType":"189","endLine":15,"endColumn":8,"suggestions":"225"},{"ruleId":"180","severity":1,"message":"226","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":20},{"ruleId":"187","severity":1,"message":"196","line":15,"column":6,"nodeType":"189","endLine":15,"endColumn":8,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'isAuth' is defined but never used.","'Home' is defined but never used.","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["230"],"'Modal' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.","'setLoggedin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["231"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.",["232"],"'useEffect' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Slide' is defined but never used.","'Pagination' is defined but never used.","'Search' is defined but never used.",["233"],["234"],"'useParams' is defined but never used.","'colorSet' is assigned a value but never used.",["235"],["236"],["237"],"'profileDetails' is assigned a value but never used.",["238"],"'jobDetails' is assigned a value but never used.",["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},{"desc":"242","fix":"245"},{"desc":"242","fix":"246"},{"desc":"242","fix":"247"},{"desc":"242","fix":"248"},{"desc":"242","fix":"249"},{"desc":"242","fix":"250"},{"desc":"242","fix":"251"},"Update the dependencies array to be: [setPopup]",{"range":"252","text":"253"},"Update the dependencies array to be: [getData]",{"range":"254","text":"255"},{"range":"256","text":"255"},{"range":"257","text":"255"},{"range":"258","text":"255"},{"range":"259","text":"255"},{"range":"260","text":"255"},{"range":"261","text":"255"},{"range":"262","text":"255"},{"range":"263","text":"255"},[422,424],"[setPopup]",[3539,3541],"[getData]",[6027,6029],[17393,17395],[21473,21475],[21708,21710],[19675,19677],[1177,1179],[458,460],[443,445]]